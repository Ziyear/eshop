package ${package}.${moduleName}.controller;

import java.util.Arrays;
import java.util.Map;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.Api;
import org.springframework.http.MediaType;

import ${entityPackage}.${moduleName}.excel.${className}Bean;
import ${entityPackage}.${moduleName}.entity.${className}Entity;
import ${servicepackage}.${moduleName}.service.${className}Service;
##import ${mainPath}.common.utils.LayuiPage;
import com.eshop.generator.utils.LayuiPage;
import com.eshop.generator.utils.ActionResult;
import io.swagger.annotations.ApiOperation;


/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/rest/api/${version}/${pathName}")
@Api(value = "${pathName}", description = "${comments}", produces = MediaType.APPLICATION_JSON_VALUE)
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @RequestMapping(value = "/list", method = RequestMethod.GET)
    @ApiOperation(value = "查看信息集合", httpMethod = "GET", response = LayuiPage.class, notes = "查看信息集合")
    @RequiresPermissions("${moduleName}:${pathName}:list")
    public LayuiPage list(@RequestParam Map<String, Object> params){
        LayuiPage page = ${classname}Service.queryPage(params);

        return page;
    }


    /**
     * 信息
     */
    @RequestMapping(value = "/info/{${pk.attrname}}", method = RequestMethod.GET)
    @ApiOperation(value = "查看信息", httpMethod = "GET", response = R.class, notes = "查看信息")
    @RequiresPermissions("${moduleName}:${pathName}:info")
    public R info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
			${className}Entity ${classname} = ${classname}Service.selectById(${pk.attrname});

        return R.ok().put("${classname}", ${classname});
    }

    /**
     * 保存
     */
    @RequestMapping(value = "/save", method = RequestMethod.POST)
    @ApiOperation(value = "保存记录", httpMethod = "POST", response = R.class, notes = "保存记录")
    @RequiresPermissions("${moduleName}:${pathName}:save")
    public R save(@RequestBody ${className}Entity ${classname}){
			${classname}Service.insert(${classname});

        return R.ok();
    }

    /**
     * 修改
     */
    @RequestMapping(value = "/update", method = RequestMethod.PUT)
    @ApiOperation(value = "修改记录", httpMethod = "PUT", response = R.class, notes = "修改记录")
    @RequiresPermissions("${moduleName}:${pathName}:update")
    public R update(@RequestBody ${className}Entity ${classname}){
			${classname}Service.updateById(${classname});

        return R.ok();
    }

    /**
     * 删除
     */
    @RequestMapping(value = "/delete", method = RequestMethod.DELETE)
    @ApiOperation(value = "删除记录", httpMethod = "DELETE", response = R.class, notes = "删除记录")
    @RequiresPermissions("${moduleName}:${pathName}:delete")
    public R delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){
			${classname}Service.deleteBatchIds(Arrays.asList(${pk.attrname}s));

        return R.ok();
    }

    /**
     * 导出
    */
    @RequestMapping(value = "/export", method = RequestMethod.GET)
    @ApiOperation(value = "导出记录", httpMethod = "GET", notes = "导出记录")
    @RequiresPermissions("${moduleName}:${pathName}:export")
    public void export(@RequestParam Map<String, Object> params, HttpServletResponse response) throws Exception {
        LayuiPage page = ${classname}Service.queryPage(params);

        ExcelUtils.exportExcelToTarget(response, "${comments}", page.getData(), ${className}Bean.class);
    }

}
